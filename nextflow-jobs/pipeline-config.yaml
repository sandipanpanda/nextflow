apiVersion: v1
kind: ConfigMap
metadata:
  name: nextflow-pipeline
  namespace: nextflow
data:
  fibo-jobs.nf: |
    #!/usr/bin/env nextflow
    nextflow.enable.dsl=2

    workflow {
        channel.of(1, 2, 3) | emitFibonacci
    }

    process emitFibonacci {
        tag "fib-${val}"
        
        input:
        val val
        
        script:
        """
        echo "Starting Fibonacci generator for Task ${val}..."

        python3 - <<'PYCODE'
    import time
    from datetime import datetime

    a, b = 0, 1
    for i in range(20000):
        current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        print(f"[{current_time}] Task ${val} - Fibonacci #{i}: {a}", flush=True)
        a, b = b, a + b
        time.sleep(3)

    print(f"Task ${val} completed!", flush=True)
    PYCODE
        """
    }

  nextflow.config: |
    process {
      executor = 'k8s'
      container = 'python:3.11'
      cpus = 1
      memory = '256 MB'
      errorStrategy = 'retry(3)'
      maxRetries = 1
      pod = [annotation: 'dakr.devzero.io/runtime-dirs', value: '/']
    }

    k8s {
      namespace = 'nextflow'
      computeResourceType = 'Job'
      storageClaimName   = 'nextflow-workspace'
      storageMountPath   = '/workspace'
      workDir            = '/workspace/work'
      defaultCpuRequest   = '100m'
      defaultMemoryRequest = '128Mi'
      defaultCpuLimit     = '500m'
      defaultMemoryLimit  = '256Mi'
      ttlSecondsAfterFinished = 600
    }

    workDir = '/workspace/work'
